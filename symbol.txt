import java.util.HashMap;

public class TwoPassAssembler {
    
    public static void main(String[] args) {
        String[] sourceCode = {
            "START 180",
            "   READ M",
            "   READ N",
            "LOOP   MOVER AREG, M",
            "       MOVER BREG, N",
            "       COMP BREG, ='200'",
            "       BC GT, LOOP",
            "BACK   SUB AREG, M",
            "       COMP AREG, ='500'",
            "       BC  LT, BACK",
            "   STOP",
            "M      DS  1",
            "N      DS  1",
            "       END"
        };
        
        HashMap<String, Integer> symbolTable = new HashMap<>();
        
        // First pass to generate symbol table
        int locationCounter = -1; // Starting address
        for (String line : sourceCode) {
            String[] tokens = line.split("\\s+");
            String label = tokens[0];
            if (label.equals("END")) break; // End of program
            if (!label.equals("DS") && !label.equals("START")) {
                locationCounter++;
                symbolTable.put(label, locationCounter);
            } else if (label.equals("START")) {
                locationCounter = Integer.parseInt(tokens[1]) - 1; // Subtract 1 since we increment at the beginning of the loop
            } else if (label.equals("DS")) {
                int dsValue = Integer.parseInt(tokens[1]);
                locationCounter += dsValue;
            }
        }
        
        // Print symbol table
        System.out.println("Symbol Table:");
        System.out.println("Label\tAddress");
        for (String label : symbolTable.keySet()) {
            System.out.println(label + "\t" + symbolTable.get(label));
        }
    }
}
